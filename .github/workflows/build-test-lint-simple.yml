name: Build, Test, Lint for Pull Requests

on:
  pull_request:
    branches:
      - main
jobs:
  setup:
    name: Setup Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # install a specific version of Node using
      # https://github.com/actions/setup-node
      - name: Use Node.js v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      # just so we learn about available environment variables GitHub provides
      - name: Print CI env variables
        run: |
          npm i -g @bahmutov/print-env@2
          print-env GITHUB BUILD ACTIONS || true

      - name: install dependencies
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          npm ci

      - name: Build
        run: npm run setup

      - name: Test
        run: npm run test --verbose

      - name: Lint
        run: npm run lint

      - name: Cypress tests
        run: |
          npm run test:ci

  # test-lint:
  #   name: Test & Lint
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   steps:
  #     - uses: actions/checkout@v2

  #     # install a specific version of Node using
  #     # https://github.com/actions/setup-node
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12

  #     # Restore just local node_modules.
  #     - name: Cache local node_modules
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           */*/node_modules
  #           lib
  #           */*/lib
  #           dist
  #           */*/dist
  #         key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
  #     - name: Test
  #       run: npm run test --verbose

  # - name: Lint
  #   run: npm run lint
  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v2
      # @todo we may not need this if using
      # uses: cypress-io/github-action@v2
      # install a specific version of Node using
      # https://github.com/actions/setup-node
      # - name: Use Node.js v12
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 12
      # Restore just local node_modules and the Cypress binary archives.
      - name: Cache Cypress binary
        uses: actions/cache@v2
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
      # Restore local node_modules and build files
      # see .
      - name: Cache local node_modules
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
            lib
            */*/lib
            dist
            */*/dist
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      # check the restored Cypress binary
      - name: Check binary
        run: |
          npx cypress cache path
          npx cypress cache list
      # Starts local server, then runs Cypress tests and records results on the dashboard
      # npx cypress run --record --parallel --group "Parallel 2x"
      #--parallel --group "Parallel 2x"
      - name: Cypress tests
        uses: cypress-io/github-action@v2
        timeout-minutes: 10
        # with:
        #   wait-on: "http://localhost:8005"
        #   # wait for 2 minutes for the server to respond
        #   wait-on-timeout: 120
        env:
          # place your secret record key at
          # https://github.com/cypress-io/cypress-example-kitchensink/settings/secrets
          #CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
          TERM: xterm
