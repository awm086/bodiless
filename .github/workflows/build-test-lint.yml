name: Build, Test, Lint for Pull Requests

on:
  pull_request:
    branches:
      - main
jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # install a specific version of Node using
      # https://github.com/actions/setup-node
      - name: Use Node.js v12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      # just so we learn about available environment variables GitHub provides
      - name: Print CI env variables
        run: |
          npm i -g @bahmutov/print-env@2
          print-env GITHUB BUILD ACTIONS || true

      # Restore the previous NPM modules and Cypress binary archives.
      # Any updated archives will be saved automatically after the entire
      # workflow successfully finishes.
      # See https://github.com/actions/cache
      - name: Cache central NPM modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
      - name: Cache Cypress binary
        uses: actions/cache@v1
        with:
          path: ~/.cache/Cypress
          key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
      # Cache local node_modules to pass to testing jobs
      - name: Cache local node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-${{ github.ref }}-
      - name: install dependencies and verify Cypress
        env:
          # make sure every Cypress install prints minimal information
          CI: 1
        run: |
          npm ci
          npx cypress cache path
          npx cypress cache list
          npx cypress verify
          npx cypress info

      - name: Build
        run: npm run setup

      - name: Test
        run: npm run test --verbose

      - name: Lint
        run: npm run lint

      - name: Cypress tests
        run: |
          npm run test:ci --parallel --group "Parallel 2x"
  # cypress:
  #   name: Cypress test
  #   runs-on: ubuntu-latest
  #   needs: build-test-lint
  #   steps:
  #     - uses: actions/checkout@v2

  #     # install a specific version of Node using
  #     # https://github.com/actions/setup-node
  #     - name: Use Node.js v12
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12

  #     # Restore just local node_modules and the Cypress binary archives.
  #     - name: Cache Cypress binary
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.cache/Cypress
  #         key: cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
  #         restore-keys: |
  #           cypress-${{ runner.os }}-cypress-${{ github.ref }}-${{ hashFiles('**/package.json') }}
  #     - name: Cache local node_modules
  #       uses: actions/cache@v1
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-node-modules-${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-modules-${{ github.ref }}-
  #     # check the restored Cypress binary
  #     - name: Check binary
  #       run: |
  #         npx cypress cache path
  #         npx cypress cache list
  #     # Starts local server, then runs Cypress tests and records results on the dashboard
  #     # npx cypress run --record --parallel --group "Parallel 2x"
  #     - name: Cypress tests
  #       run: |
  #         npm run test:ci --parallel --group "Parallel 2x"
  #       env:
  #         # place your secret record key at
  #         # https://github.com/cypress-io/cypress-example-kitchensink/settings/secrets
  #         #CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
  #         TERM: xterm